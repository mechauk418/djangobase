name: Docekr CI

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: checkls
        run: pwd

      - name: checkcat
        run: cat docker-compose.yml

      - name: Login Dockerhub
        env:
          DOCKER_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
        run: sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Generate Environment Variables File for Production
        run: |
          touch ./djangobase2/.env
          echo AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}} >> ./djangobase2/.env
          echo AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}} >> ./djangobase2/.env
          echo AWS_STORAGE_BUCKET_NAME=${{secrets.AWS_STORAGE_BUCKET_NAME}} >> ./djangobase2/.env
          echo DEBUG=${{secrets.DEBUG}} >> ./djangobase2/.env
          echo DATABASE_HOST=${{secrets.DATABASE_HOST}} >> ./djangobase2/.env
          echo DATABASE_PASSWORD=${{secrets.DATABASE_PASSWORD}} >> ./djangobase2/.env
          echo DATABASE_NAME=${{secrets.DATABASE_NAME}} >> ./djangobase2/.env
          echo REST_API_KEY=${{secrets.REST_API_KEY}} >> ./djangobase2/.env
          echo GOOGLE_CLIENT=${{secrets.GOOGLE_CLIENT}} >> ./djangobase2/.env
          echo GOOGLE_PASSWORD=${{secrets.GOOGLE_PASSWORD}} >> ./djangobase2/.env
          echo STATE=${{secrets.STATE}} >> ./djangobase2/.env
          echo SECRET_KEY=${{secrets.SECRET_KEY}} >> ./djangobase2/.env
          cat ./djangobase2/.env

      - name: Build the Docker image
        run: ls -al
      - name: build up
        run: docker compose build --no-cache
      - name: push
        run: docker compose push

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo ls -a
            sudo pwd
            sudo docker compose -f docker-compose.yml up -d